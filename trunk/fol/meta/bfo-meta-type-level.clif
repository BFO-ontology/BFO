// TODO: still some tidying from KIF->CLIF

// EXAMPLE: (all_some part_of all_times part_of) (holds part_of cell_nucleus cell)
//
// most relations follow the OBO-RO all-some pattern
// ie ALL instances of U1 stand in relation rel to SOME instance U2 at ALL times
(metarelation all_some_all_times)
(subrelation all_some_all_times all_some)
(functional all_some_all_times)
(inverse_functional all_some_all_times)
(example all_some_all_times (all_some_all_times part_of_some part_of) "RO")
//(example all_some_all_times 
//	 (if (part_of_some nucleus cell) 
//	     (forall (n t) (if 
//			      (instance_of n nucleus t) 
//			      (exists (c) (and (instance_of c cell t)
//						(part_of n c t))))))
//	 "GO")

(text_definition all_some_all_times "relates a type-level relation <i>tr</i> to its instance-level counterpart <b>ir</b>, in a temporally invariant way such that for two types, A and B, related by <i>tr</i>, it is the case that all instances of A are related by <b>ir</b> to some instance of B at all times for which the instance of A exists")
(comment all_some_all_times "The examples here assume the type-level relation is indicated using the suffix '_some', but best practice has not yet been decided")
// @Axiom: all_some_all_times holds between an instance-instance relation and a type-type relation
(forall (tr ir)
        (if (all_some_all_times tr ir)
            (and (instance_instance ir)
                 (type_type tr))))
// @Axiom: if an all-some-all-times relations holds at the type level between A and B, it holds for all instances of A to some instance of B at all times that the instance of A exists
(forall (tr ir)
        (if (all_some_all_times tr ir)
            (if (and (tr A B)
                     (instance_of ai A t))
                (exists (bi)
                        (and
                         (instance_of bi B t)
                         (ir ai bi t))))))


(metarelation all_some)
(text_definition all_some "relates a type-level relation <i>tr</i> to its instance-level counterpart <b>ir</b>, in an atemporal way, such that for two types, A and B, related by <i>tr</i>, it is the case that all instances of A are related by <b>ir</b> to some instance of B")
(example all_some (and (all_some part_of_some part_of) 
                       (part_of_some mitosis M_phase_of_mitotic_cell_cycle)) "RO")
(comment all_some "Corresponds to an existential restriction in OWL")
(forall (tr ir)
        (if (all_some tr ir)
            (instance_instance ir)))
(forall (tr ir)
        (if (all_some tr ir)
            (type_type tr)))
(forall (tr ir)
        (if (all_some tr ir)
            (if (and (tr A B)
                     (instance_of ai A))
                (exists (bi)
                        (and
                         (instance_of bi B)
                         (ir ai bi))))))

(metarelation all_only)
(text_definition all_only "relates a type-level relation <i>tr</i> to its instance-level counterpart <b>ir</b>, in an atemporal way, such that for two types, A and B, related by <i>tr</i>, it is the case that no instances of A are related by <b>ir</b> to something that is not an instance of B")
// @Axiom: all_only relates from type level relations
(forall (tr ir)
        (if (all_only tr ir)
            (type_type tr)))
// @Axiom: all_only relates to instance level relations
(forall (tr ir)
        (if (all_only tr ir)
            (instance_instance ir))
// @Axiom: all_only definition
(forall (tr ir)
        (iff (all_only tr ir)
             (if (and (tr A B)
                      (instance_of ai A))
                 (not (exists (bi)
                              (and
                               (not (instance_of bi B))
                               (ir ai bi)))))))
// @Thereom: propagation of all_only relations over is_a
(forall (tr ir)
        (if (all_only tr ir)
            (if (and (is_a A B)
                     (tr B C))
                (tr A C))))
// @Thereom: propagation of all_only relations under is_a
(forall (tr ir)
        (if (all_only tr ir)
            (if (and (tr A B)
                     (is_a B C))
                (tr A C))))

(metarelation all_some_tr)
(text_definition all_some_tr "relates a type-level relation <i>tr</i> to its instance-level counterpart <b>ir</b>, such that for two types, A and B, related by <i>tr</i>, it is the case that all instances of A stand ing a <b>ir</b> relation to some B for some time, and neither becomes detached or starts in a detached state")
(expanded_label all_some_tr "time-restricted part_of")
//(example all_some_tr (and (all_some_tr tr_part_of_some part_of) 
//                          (tr_part_of_some 

// @Axiom: all_some_tr definition
(forall (tr ir)
        (iff (all_some_tr tr ir)
             (if (and (tr A B)
                      (instance_of ai A t))
                 (exists (bi)
                         (and
                          (exists (t1)
                                  (and (instance_of bi B t1)
                                       (ir ai bi t1)))
                          (if (and (exists_at ai t2)
                                   (exists_at b1 t2)
                                   (ir ai bi t2))))))))

(metarelation all_some_in_reference_context)
(text_definition all_some_in_reference_context "relates a type-level relation <i>tr</i> to its instance-level counterpart <b>ir</b>, such that for two types, A and B, related by <i>tr</i>, it is the case that all instances of A stand in a <b>ir</b> relation to some B where both instances stand in relation r2 to the same entity")
(comment all_some_in_reference_context "See Neuhaus, Osumi-Sutherland for details")
(example all_some_in_reference_context
         (and (all_some_in_reference_context begins_at_end_of_r begins_at_end_of reference_process)
              (range reference_process life)
              (begins_at_end_of_r germ_band_retraction embryonic_stage_11))
         "FBdv")
(forall (tr ir rr)
        (if (all_some_in_reference_context tr ir rr)
            (forall (A B ai)
                    (if (and (tr A B)
                             (instance_of ai A))
                        (exists (bi)
                                (and
                                 (instance_of bi B)
                                 (forall (ri) 
                                         (if (rr ai ri)
                                             (rr ai ri))
                                         (ir ai bi))))))))
