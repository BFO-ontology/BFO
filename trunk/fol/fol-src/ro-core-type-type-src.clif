(cl-module ro-core-type-type

           (relation transformation_of)
           (type_type transformation_of)
           (type_level_only transformation_of)
           (label transformation_of "transformation_of")
           (instance_domain transformation_of Continuant)
           (instance_range transformation_of Continuant)
           (transitive transformation_of)
           (comment transformation_of "When an embryonic oenocyte (a type of insect cell) is transformed into a larval oenocyte, one and the same continuant entity preserves its identity while instantiating distinct classes at distinct times. The class-level relation transformation_of obtains between continuant classes C and C1 wherever each instance of the class C is such as to have existed at some earlier time as an instance of the distinct class C1 (see Figure 2 in paper). This relation is illustrated first of all at the molecular level of granularity by the relation between mature RNA and the pre-RNA from which it is processed, or between (UV-induced) thymine-dimer and thymine dinucleotide. At coarser levels of granularity it is illustrated by the transformations involved in the creation of red blood cells, for example, from reticulocyte to erythrocyte, and by processes of development, for example, from larva to pupa, or from (post-gastrular) embryo to fetus or from child to adult. It is also manifest in pathological transformations, for example, of normal colon into carcinomatous colon. In each such case, one and the same continuant entity instantiates distinct classes at different times in virtue of phenotypic changes.")
           (exported_identifier transformation_of "OBO_REL_C:0000013")
           (text_definition transformation_of "Relation between two classes, in which instances retain their identity yet change their classification by virtue of some kind of transformation. Formally: C transformation_of C' if and only if given any c and any t, if c instantiates C at time t, then for some t', c instantiates C' at t' and t' earlier t, and there is no t2 such that c instantiates C at t2 and c instantiates C' at t2.")
           (text_definition_xref transformation_of "PMID:15892874")
           //(image_xref transformation_of 'http://genomebiology.com/content/figures/gb-2005-6-5-r46-2-l.jpg')
           // Axiom: C transformation_of C' defined as: if c instantiates C at t, then it must be the case there is some earlier time such that c instantiates C' at that time, and there is no time where c instantiates both C and C'
           (forall (C C1)
                   (iff (transformation_of C C1)
                        (if (instance_of c C t)
                            (exists (t1)
                                    (and (instance_of c C1 t1)
                                         (earlier_than t1 t)
                                         (not (exists (t2)
                                                      (and (instance_of c C t2)
                                                           (instance_of c C1 t2)))))))))


           (relation part_of_some)
           (type_type part_of_some)
           (holds_over part_of_some part_of)
           (label part_of_some "part_of")
           (transitive part_of_some)
           (anti_symmetric part_of_some)
           (reflexive part_of_some)
           (example part_of_some (part_of_some "mitochondrial matrix" "mitochodrion") "GO")
           (example part_of_some (part_of_some "transcription" "gene expression") "GO")
           (example part_of_some (part_of_some "cell nucleus" "cell") "GO")
           (example part_of_some (part_of_some "heart ventricle" "heart") "MA")
           (comment part_of_some "To define part_of as a relation between classes we again need to distinguish the two cases of continuants and processes, even though the explicit reference to instants of time now falls away. For continuants, we have C part_of C1 if and only if any instance of C at any time is an instance-level part of some instance of C1 at that time, as for example in: cell nucleus part_ of cell.")
           (exported_identifier part_of_some "OBO_REL_C:0000002")
           (text_definition part_of_some "For continuants: C <i>part_of</i> C' if and only if: given any c that instantiates C at a time t, there is some c' such that c' instantiates C' at time t, and c <b>part_of</b> c' at t. For processes: P <i>part_of</i> P' if and only if: given any p that instantiates P at a time t, there is some p' such that p' instantiates P' at time t, and p <b>part_of</b> p' at t. (Here <b>part_of</b> is the instance-level part-relation, @OBO_REL_I:0000002@).")
           (text_definition_xref part_of_some "PMID:15892874")
           (all_some_all_times part_of_some part_of)
           (all_some part_of_some part_of)

           (relation has_part_some)
           (type_type has_part_some)
           (holds_over has_part_some has_part)
           (all_some_all_times has_part_some has_part)
           (label has_part_some "has_part")
           (transitive has_part_some)
           (anti_symmetric has_part_some)
           (reflexive has_part_some)
           (example has_part_some (has_part_some "nucleate cell" "nucleus") "CL")
           (example has_part_some (has_part_some "cell" "cytoplasm") "GO")
           (exported_identifier has_part_some "OBO_REL_C:0000003")
           (text_definition has_part_some "C has_part_some C' if and only if: given any c that instantiates C at a time t, there is some c' such that c' instantiates C' at time t, and c *has_part* c' at t. For processes: P has_part_some P' if and only if: given any p that instantiates P at a time t, there is some p' such that p' instantiates P' at time t, and p *has_part* p' at t. (Here *has_part* is the instance-level part-relation, @OBO_REL_I:0000003@)")


           (relation integral_part_of)
           (type_type integral_part_of)
           (type_level_only integral_part_of)
           (label integral_part_of "integral_part_of")
           (transitive integral_part_of)
           (anti_symmetric integral_part_of)
           (reflexive integral_part_of)
           (normative_direction_for integral_part_of "integral_part")
           (exported_identifier integral_part_of "OBO_REL_C:0000004")
           (text_definition integral_part_of "C integral_part_of C' if and only if: C part_of C' AND C' has_part C")
           (text_definition_xref integral_part_of "PMID:15892874")
           (example integral_part_of (integral_part_of "heart morphogenesis" "heart development") "GO")
           (inverse_of integral_part_of has_integral_part)
           (subrelation integral_part_of part_of_some)
           (symmetric_form_of integral_part_of part_of)
           (forall (X Y)
                   (iff (integral_part_of X Y)
                        (and (part_of_some X Y)
                             (has_part_some Y X))))


           (relation has_integral_part)
           (type_type has_integral_part)
           (type_level_only has_integral_part)
           (label has_integral_part "has_integral_part")
           (transitive has_integral_part)
           (anti_symmetric has_integral_part)
           (reflexive has_integral_part)
           (exported_identifier has_integral_part "OBO_REL_C:0000005")
           (text_definition has_integral_part "Type level inverse of integral_part_of. C has_integral_part C' if and only if: C has_part C' AND C' part_of C")
           (symmetric_form_of has_integral_part has_part)
           (forall (X Y)
                   (iff (has_integral_part X Y)
                        (and (part_of_some Y X)
                             (has_part_some X Y))))

           (inverse_always_true integral_part_of part_of_some)
           (holds_bidirectionally_for integral_part_of part_of_some has_part_some)
           (subrelation has_integral_part has_part_some)

           (relation proper_part_of_some)
           (type_type proper_part_of_some)
           (all_some proper_part_of_some proper_part_of)
           (label proper_part_of_some "proper_part_of")
           (subrelation proper_part_of_some part_of_some)
           (transitive proper_part_of_some)
           (exported_identifier proper_part_of_some "OBO_REL_C:0000006")
           (text_definition proper_part_of_some "As for part_of_some, with the additional constraint that subject and object are distinct")
           (text_definition_xref proper_part_of_some "PMID:15892874")

           (relation has_proper_part_some)
           (type_type has_proper_part_some)
           (all_some has_proper_part_some has_proper_part)
           (label has_proper_part_some "has_proper_part")
           (subrelation has_proper_part_some has_part_some)
           (transitive has_proper_part_some)
           (exported_identifier has_proper_part_some "OBO_REL_C:0000007")

           (relation adjacent_to_some)
           (type_type adjacent_to_some)
           (all_some_all_times adjacent_to_some adjacent_to)
           (label adjacent_to_some "adjacent_to")
           (comment adjacent_to_some
                    "Note that adjacent_to_some as defined is not a symmetric relation, in contrast to its instance-level counterpart. For it can be the case that Cs are in general such as to be adjacent to instances of C1 while no analogous statement holds for C1s in general in relation to instances of C. Examples are: nuclear membrane adjacent_to_some cytoplasm; seminal vesicle adjacent_to_some urinary bladder; ovary adjacent_to_some parietal pelvic peritoneum")
           (exported_identifier adjacent_to_some "OBO_REL_C:0000012")
           (text_definition adjacent_to_some "C adjacent to C' if and only if: given any instance c that instantiates C at a time t, there is some c' such that: c' instantiates C' at time t and c and c' are in spatial proximity")
           (text_definition_xref adjacent_to_some "PMID:15892874")

           (relation contained_in_some)
           (type_type contained_in_some)
           (holds_over contained_in_some contained_in)
           (all_some_all_times contained_in_some contained_in)
           (label contained_in_some "contained_in")
           (exported_identifier contained_in_some "OBO_REL_C:0000010")
           (text_definition contained_in_some "C contained_in_some C' if and only if: given any instance c that instantiates C at a time t, there is some c' such that: c' instantiates C' at time t and c located_in c' at t, and it is not the case that c *overlaps* c' at t. (c' is a conduit or cavity.)")
           (text_definition_xref contained_in_some "PMID:15892874")

           (relation contains_some)
           (type_type contains_some)
           (label contains_some "contains")
           (exported_identifier contains_some "OBO_REL_C:0000011")

           (relation located_in_some)
           (type_type located_in_some)
           (all_some_all_times located_in_some located_in)
           (label located_in_some "located_in")
           (type_domain located_in_some Continuant)
           (type_range located_in_some Continuant)
           (transitive located_in_some)
           (reflexive located_in_some)
           (transitive_over located_in_some part_of_some)
           (exported_identifier located_in_some "OBO_REL_C:0000008")
           (text_definition located_in_some "C located_in_some C' if and only if: given any c that instantiates C at a time t, there is some c' such that: c' instantiates C' at time t and c *located_in* c'. (Here *located_in* is the instance-level location relation.)")

           (relation location_of_some)
           (type_type location_of_some)
           (all_some_all_times location_of_some location_of)
           (label location_of_some "location_of")
           (type_domain location_of_some Continuant)
           (type_range location_of_some Continuant)
           (transitive location_of_some)
           (reflexive location_of_some)
           (text_definition location_of_some "C location_of_some C' if and only if: given any c that instantiates C at a time t, there is some c' such that: c' instantiates C' at time t and c *location_of* c'. (Here *location_of* is the instance-level location relation, @OBO_REL_I:0000009@.)")
           (exported_identifier location_of_some "OBO_REL_C:0000009")

           (relation overlaps_some)
           (type_type overlaps_some)
           (label overlaps_some "overlaps")
           (comment overlaps_some "Note that overlaps is symmetric on the instance level but not the type level")
           (all_some_all_times overlaps_some overlaps)
           (reflexive overlaps_some)
           (example overlaps_some "uterine tract overlaps urogenital system  but NOT urogenital system overlaps uterine tracts")
           (exported_identifier overlaps_some "OBO_REL_C:0000201")

           (relation has_participant_some)
           (type_type has_participant_some)
           (all_some has_participant_some has_participant)
           (label has_participant_some "has_participant")
           (type_domain has_participant_some Occurrent)
           (type_range has_participant_some IndependentContinuant)
           (exported_identifier has_participant_some "OBO_REL_C:0000019")
           (text_definition has_participant_some "P has_participant_some C if and only if: given any process p that instantiates P there is some continuant c, and some time t, such that: c instantiates C at t and c participates in p at t")
           (text_definition_xref has_participant_some "PMID:15892874")

           (relation participates_in_some)
           (type_type participates_in_some)
           (all_some participates_in_some participates_in)
           (label participates_in_some "participates_in")
           (type_domain participates_in_some IndependentContinuant)
           (type_range participates_in_some Occurrent)
           (exported_identifier participates_in_some "OBO_REL_C:0000020")
           (text_definition participates_in_some "C participates_in_some P if and only if: given any process p that instantiates P there is some continuant c, and some time t, such that: c instantiates C at t and c participates in p at t")

           (relation has_agent_some)
           (type_type has_agent_some)
           (all_some has_agent_some has_agent)
           (label has_agent_some "has_agent")
           (subrelation has_agent_some has_participant_some)
           (type_domain has_agent_some Occurrent)
           (type_range has_agent_some IndependentContinuant)
           (exported_identifier has_agent_some "OBO_REL_C:0000021")
           (text_definition has_agent_some "P has_agent_some C if and only if: given any process p that instantiates P there is some continuant c, and some time t, such that: c instantiates C at t and c has_agent p at t")
           (text_definition_xref has_agent_some "PMID:15892874")

           (relation agent_in_some)
           (type_type agent_in_some)
           (all_some agent_in_some agent_in)
           (label agent_in_some "agent_in")
           (subrelation agent_in_some participates_in_some)
           (type_domain agent_in_some IndependentContinuant)
           (type_range agent_in_some Occurrent)
           (exported_identifier agent_in_some "OBO_REL_C:0000022")

           (relation inheres_in_some)
           (type_type inheres_in_some)
           (label inheres_in_some "inheres_in")
           (exported_identifier inheres_in_some "OBO_REL_C:0000026")
           (text_definition inheres_in_some "A relation between a dependent continuant D and an entity E. D inheres_in E iff: given any d that instantiates D at t, there exists some e that instantiates E at t and d *inheres_in* e at t. Here *inheres_in* is the primitive instance level relation, OBO_REL_I:0000026.")
           (all_some_all_times inheres_in_some inheres_in)

           (relation bearer_of_some)
           (type_type bearer_of_some)
           (label bearer_of_some "bearer_of")
           (comment bearer_of_some "Examples: red eye bearer_of_some redness")
           (exact_synonym bearer_of_some "has_inherent")
           (exact_synonym bearer_of_some "has_inherer")
           (exported_identifier bearer_of_some "OBO_REL_C:0000027")
           (text_definition bearer_of_some "C bearer_of_some DC if and only if : given any continuant c that instantiates C at t, there exists some c that instantiates C at t and d *inheres_in* c at t. Here *inheres_in* is the primitive instance level relation, @OBO_REL_I:0000026@.")
           (all_some_all_times bearer_of_some bearer_of)

           (relation quality_of_some)
           (type_type quality_of_some)
           (label quality_of_some "quality_of")
           (subrelation quality_of_some inheres_in_some)
           (exact_synonym quality_of_some "is_all_quality_of")
           (exported_identifier quality_of_some "OBO_REL_C:0000028")
           (text_definition quality_of_some "A relation between a quality Q and an entity E. Q quality_of_some E iff: Q inheres_in E and Q is a quality")
           (all_some_all_times quality_of_some quality_of)

           (relation has_quality_some)
           (type_type has_quality_some)
           (label has_quality_some "has_quality")
           (subrelation has_quality_some bearer_of_some)
           (exported_identifier has_quality_some "OBO_REL_C:0000029")
           (text_definition has_quality_some "A relation between an entity and a quality. For types: E has_quality_some Q iff: for any eEt, exists qQt such that q inheres_in e at t. For instances: e has_quality_some q at t iff q inheres_in e at t and q instance-of Quality")
           (all_some_all_times has_quality_some has_quality)

           (relation function_of_some)
           (type_type function_of_some)
           (label function_of_some "function_of")
           (subrelation function_of_some inheres_in_some)
           (comment function_of_some "Example: 'to blood pump' function_of_some 'heart'")
           (exported_identifier function_of_some "OBO_REL_C:0000030")
           (text_definition function_of_some "F function_of C iff : for any f, t such that f instantiates F at t, there exists some c such that c instantiates C at t and f *function_of* C at t")
           (all_some_all_times function_of_some function_of)

           (relation has_function_some)
           (type_type has_function_some)
           (label has_function_some "has_function")
           (subrelation has_function_some bearer_of_some)
           (comment has_function_some "heart has_function_some to-pump-blood")
           (exported_identifier has_function_some "OBO_REL_C:0000031")
           (text_definition has_function_some "Relation between an independent continuant and a function.")
           (all_some_all_times has_function_some has_function)

           (relation role_of_some)
           (type_type role_of_some)
           (label role_of_some "role_of")
           (subrelation role_of_some inheres_in_some)
           (comment role_of_some "Example: 'to blood pump' function_of 'heart'")
           (exported_identifier role_of_some "OBO_REL_C:0000032")
           (text_definition role_of_some "A relation between a role R and an entity E. R role_of_some E iff: R inheres_in_some E and R is_a role")
           (all_some_all_times role_of_some role_of)

           (relation has_role_some)
           (type_type has_role_some)
           (label has_role_some "has_role")
           (subrelation has_role_some bearer_of_some)
           (exported_identifier has_role_some "OBO_REL_C:0000033")
           (text_definition has_role_some "A relation between a continuant C and a role R. The reciprocal relation of role_of.")
           (all_some_all_times has_role_some has_role)

           (relation realizes_some)
           (type_type realizes_some)
           (label realizes_some "realizes")
           (comment realizes_some "The process of 'histidine catabolism' (GO:0006548) realizes_some the function 'histidine ammonia lyase activity' (GO:0004397) (note: here 'activity' denotes a function and not a process). We leave open the possibility of defining in future the sub-relations directly_realizes_some (as bewteen a function and it's functioning) and indirectly_realizes")
           (narrow_synonym realizes_some "is_realization_of")
           (narrow_synonym realizes_some "realization_of")
           (narrow_synonym realizes_some "has_function_part")
           (exported_identifier realizes_some "OBO_REL_C:0000034")
           (text_definition realizes_some "Relation between a process and a realizable entity. P /realizes_some/ F iff: given any p that instantiates P, there exists some f, t such that f instantiates F at t and p *realizes* f. Here, *realizes* is the primitive instance level relation")
           (all_some realizes_some realizes)

           (relation realized_by_some)
           (type_type realized_by_some)
           (label realized_by_some "realized_by")

           (related_synonym realized_by_some "executed_during")
           (narrow_synonym realized_by_some "has_realization")
           (exported_identifier realized_by_some "OBO_REL_C:0000035")
           (text_definition realized_by_some "F realized_by P iff every instance of F is realized_by some instance of P")
           (all_some realized_by_some realized_by)

           (relation derives_from_some)
           (type_type derives_from_some)
           (label derives_from_some "derives_from")
           //(subrelation derives_from_some develops_from_some)
           (transitive derives_from_some)
           (comment derives_from_some "C derives_from_some class C' if instances of C are connected to instances of C' via some chain of instance-level derivation relations. Example: osteocyte derives_from_some osteoblast")
           (exact_synonym derives_from_some "derived_from")
           (exported_identifier derives_from_some "OBO_REL_C:0000015")
           (text_definition derives_from_some "C derives_immediately_from C' if and only if: given any c and any t, if c instantiates C at time t, then there is some c' and some t', such that c' instantiates C' at t' and t' earlier-than t and c *derives_from* c'. C derives_from_some C' if and only if: there is an chain of immediate derivation relations connecting C to C'.")
           (text_definition_xref derives_from_some "PMID:15892874")
           //(image_xref derives_from_some "http://genomebiology.com/content/figures/gb-2005-6-5-r46-3.jpg")

           (relation preceded_by_some)
           (type_type preceded_by_some)
           (label preceded_by_some "preceded_by")
           (type_domain preceded_by_some Occurrent)
           (type_range preceded_by_some Occurrent)
           (transitive preceded_by_some)
           (comment preceded_by_some "An example is: translation preceded_by_some transcription; aging preceded_by_some development (not however death preceded_by_some aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other.")
           (exported_identifier preceded_by_some "OBO_REL_C:0000017")
           (text_definition preceded_by_some "P preceded_by_some P' if and only if: given any process p that instantiates P at a time t, there is some process p' such that p' instantiates P' at time t', and t' is earlier than t. ")
           (text_definition_xref preceded_by_some "PMID:15892874")

           (relation occurs_in_some)
           (type_type occurs_in_some)
           (all_some_all_times occurs_in_some occurs_in)
           (comment occurs_in_some "Example: oocyte axis determination : The establishment, maintenance and elaboration of an axis in the oocyte. This process occurs_in the oocyte")
           (holds_over_chain occurs_in_some has_participant_some located_in_some)
           (exported_identifier occurs_in_some "OBO_REL_C:0000064")
           (label occurs_in_some "occurs_in_some")

)

